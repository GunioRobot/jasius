<?php

/**
 * Model_Entity_Data
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $property_id
 * @property integer $content_id
 * @property decimal $decimalValue
 * @property int $integerValue
 * @property decimal $floatValue
 * @property date $dateValue
 * @property string $stringValue
 * @property time $timeValue
 * @property timestamp $timestampValue
 * @property char $booleanValue
 * @property string $enumValue
 * @property string $arrayValue
 * @property string $objectValue
 * @property string $blobValue
 * @property string $clobValue
 * @property string $gzipValue
 * @property Model_Entity_Property $Property
 * @property Model_Entity_Content $Content
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     lab2023 - Dev. Team <info@lab2023.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Model_Entity_Data extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('jasius_data');
        $this->hasColumn('property_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('content_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('decimalValue', 'decimal', 24, array(
             'type' => 'decimal',
             'scale' => 6,
             'length' => '24',
             ));
        $this->hasColumn('integerValue', 'int', null, array(
             'type' => 'int',
             ));
        $this->hasColumn('floatValue', 'decimal', 24, array(
             'type' => 'decimal',
             'scale' => 6,
             'length' => '24',
             ));
        $this->hasColumn('dateValue', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('stringValue', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('timeValue', 'time', null, array(
             'type' => 'time',
             ));
        $this->hasColumn('timestampValue', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('booleanValue', 'char', 1, array(
             'type' => 'char',
             'length' => '1',
             ));
        $this->hasColumn('enumValue', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('arrayValue', 'string', 750, array(
             'type' => 'string',
             'length' => '750',
             ));
        $this->hasColumn('objectValue', 'string', 750, array(
             'type' => 'string',
             'length' => '750',
             ));
        $this->hasColumn('blobValue', 'string', 1200, array(
             'type' => 'string',
             'length' => '1200',
             ));
        $this->hasColumn('clobValue', 'string', 1200, array(
             'type' => 'string',
             'length' => '1200',
             ));
        $this->hasColumn('gzipValue', 'string', 1200, array(
             'type' => 'string',
             'length' => '1200',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_bin');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Model_Entity_Property as Property', array(
             'local' => 'property_id',
             'foreign' => 'id'));

        $this->hasOne('Model_Entity_Content as Content', array(
             'local' => 'content_id',
             'foreign' => 'id'));

        $softdelete0 = new Doctrine_Template_SoftDelete();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $blameable0 = new Doctrine_Template_Blameable();
        $searchable0 = new Doctrine_Template_Searchable(array(
             'fields' => 
             array(
              0 => 'decimalValue',
              1 => 'integerValue',
              2 => 'floatValue',
              3 => 'dateValue',
              4 => 'timeValue',
              5 => 'timestampValue',
              6 => 'booleanValue',
              7 => 'enumValue',
              8 => 'blobValue',
              9 => 'stringValue',
              10 => 'clobValue',
              11 => 'arrayValue',
              12 => 'objectValue',
              13 => 'gzipValue',
             ),
             'className' => 'JasiusDataSearch',
             ));
        $this->actAs($softdelete0);
        $this->actAs($timestampable0);
        $this->actAs($blameable0);
        $this->actAs($searchable0);
    }
}